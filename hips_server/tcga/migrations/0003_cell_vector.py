# Generated by Django 5.2.5 on 2025-08-28 15:21

from django.db import migrations, models
import math

def forwards(apps, schema_editor):
    Cell = apps.get_model("tcga", "Cell")  # historical model! use apps.get_model
    for cell in Cell.objects.all().only("id", "vector_text"):
        vt = getattr(cell, "vector_text", None)
        if vt is None:
            continue
        parts = [p.strip() for p in vt.split(",")]
        parsed = []
        for p in parts:
            if p == "" or p.lower() in {"null", "none", "nan"}:
                parsed.append(None)
                continue
            try:
                f = float(p)
                if math.isnan(f) or math.isinf(f):
                    parsed.append(None)
                else:
                    parsed.append(int(f) if f.is_integer() else f)
            except Exception:
                parsed.append(p)  # keep as string if not numeric
        cell.vector = parsed
        cell.save(update_fields=["vector"])

def backwards(apps, schema_editor):
    Cell = apps.get_model("tcga", "Cell")
    for cell in Cell.objects.all().only("id", "vector"):
        v = getattr(cell, "vector", None)
        if v is None:
            continue
        # stringify back to CSV
        cell.vector_text = ",".join("" if x is None else str(x) for x in v)
        cell.save(update_fields=["vector_text"])


class Migration(migrations.Migration):
    dependencies = [("tcga", "0002_umap")]
    operations = [
        migrations.AddField(
            model_name="cell",
            name="vector",
            field=models.JSONField(default=list, null=True),
        ),
        migrations.RunPython(forwards, backwards),
    ]
